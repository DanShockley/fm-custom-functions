/**
 * 
 * Update the SESSION object
 * 
 * @param {object} JSON_toAddOrModify - JSON object to add to SESSION (or update existing)
 * 
 * @returns {object} - updated SESSION object
 * 
 * @note the SESSION variable will be automatically updated by this function, so the returned SESSION object is only a failsafe in case the calling script step is Set Field to the SESSION variable.
 * 
 * @module SESSION
 * 
 * @dependency JSON.MergeObjects
 * 
 * @version 1.0.0
 * @author Allen Ulbricht, https://github.com/aulbricht
 * 
 **/


Let ([ 


	// OPTIONS /////////////////////////////////////
	~sessionVarName = "session" ;
	///////////////////////////////////////////////////


	// capture parameters
	~JSON_toAdd = JSON_toAddOrModify ;

	// strip any illegal symbols from the var name as well as scoping symbols (i.e. "$$")
	~sessionVarName = Filter ( ~sessionVarName ; "01234556789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_." );

	// check for existing and valid SESSION object
	~session = Evaluate ( "$$" & ~sessionVarName );
	~session = 
		If ( 
			IsEmpty ( ~session ) 
				or Left ( JSONFormatElements ( ~session ) ; 1 ) = "?" ;
			"{}" ;
			~session
			);

	// check for existing and valid object to add/merge
	~JSON_toAdd = 
		If ( 
			IsEmpty ( ~JSON_toAdd ) 
				or Left ( JSONFormatElements ( ~JSON_toAdd ) ; 1 ) = "?" ;
			"{}" ;
			~JSON_toAdd
			);

	// merge the new SESSION object with the original
	~session_merged = JSON.MergeObjects ( ~session ; ~JSON_toAdd ; "" );

	// if there were any problems, revert to the original object
	~session_merged = 
		If ( 
			Left ( JSONFormatElements ( ~session_merged ) ; 1 ) = "?" ;
			~session ;
			~session_merged
			);

	// format object and prep for re-scoping
	// note: this has to be set to a locally scoped variable (not private) to work in the subsequent EVALUATE statement
	$session_merged_tempVariable_112358 = JSONFormatElements ( ~session_merged );

	// replace existing global SESSION variable with the updated one
	~subStr = "Let ( $${{sessionVarName}} = $session_merged_tempVariable_112358 ; False )";
	~evalStr = 
		Substitute ( ~subStr ;
			[ "{{sessionVarName}}" ; ~sessionVarName ]
			);
	~evalResult = EvaluationError ( Evaluate ( ~evalStr ) );

	// clean up temp local variable
	$session_merged_tempVariable_112358 = "" ;

~=""];

~session_merged

)