/**
 * 
 * A rule that tests for a value at the given JSON key path
 * 
 * @param {string} key = the JSON key path to the value to test
 * @param {string} [LIST_dataTypes] = OPTIONAL: the required data type of the value; if NULL, any data type is accepted
 * 				Valid types: text, number, boolean, time, timestamp, object, array
 * 
 * @returnSuccess {NULL}
 * 
 * @returnError {object} Validate.Error: an error object
 * 
 * @module Validate
 * @requires {function} Validate._errorCreate()
 * @requires {function} Validate.Rule.IsOfType ()
 * 
 * @version 2.2.0
 * @author Allen Ulbricht, https://github.com/aulbricht
 * @credit forked from code by original author Todd Geist
 * 
 */


Let ([

	~key = key ;
	~list = LIST_dataTypes ;
	~dataToValidate = $$validate.this ;

	~value = JSONGetElement( ~dataToValidate ; ~key  );

~=""];

Case (

	// if the parameter data is NULL or the specified key is missing from the parameter data, return an error
	IsEmpty ( ~dataToValidate ) or PatternCount ( "¶" & JSONListKeys ( ~dataToValidate ; "." ) & "¶"; "¶" & ~key & "¶" ) = 0 ; 
		Validate._errorCreate ( ~key ; "Required parameter is missing"  ) ; 

	// if a data type parameter was included, validate that it matches the given value's data type
	not IsEmpty ( ~list ) ; Validate.Rule.IsOfType ( ~key ; List ( ~list ; "!null" ) ); 

	// default return NULL
	""
	)

)