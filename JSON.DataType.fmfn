/**
 *
 * Determine the JSON data type (e.g. numeric, string, etc) and return the corresponding numeral for the JSONSetElements data type argument
 *
 * @param {any} value - input data to analyze and detext the type
 *
 * @returnSuccess {number} JSON data type corresponding numeral (e.g. text = 1, numeral = 2)
 *
 * @returnError {array} error[n].code - error code
 * @returnError {array} error[n].descriptor - description of error
 * 
 * @module JSON
 * 
 * @version 1.0.1
 * @author Allen Ulbricht, https://github.com/aulbricht
 * @website http://northcoastsoftware.com
 *
 */


 Let ([

	// Abstract the input variable
	~value = value

];

Case ( 

	Left ( JSONFormatElements ( ~value ) ; 1 ) ≠ "?" and Left ( ~value ; 1 ) = "{" ; JSONObject ;
	Left ( JSONFormatElements ( ~value ) ; 1 ) ≠ "?" and Left ( ~value ; 1 ) = "[" ; JSONArray ;
	GetAsText ( GetAsTimestamp ( ~value ) ) = ~value ; JSONString;
	GetAsText ( GetAsTime ( ~value ) ) = ~value ; JSONString;
	GetAsTime ( ~value ) = ~value ; JSONNumber; // note: using GetAsTime on a number will equal the number, but not if the same value is set as text
	GetAsText ( ~value ) = ~value ; JSONString;

)

)
